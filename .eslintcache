[{"C:\\ProjetoTCC\\Prontuário\\web\\src\\index.js":"1","C:\\ProjetoTCC\\Prontuário\\web\\src\\App.js":"2","C:\\ProjetoTCC\\Prontuário\\web\\src\\services\\api.js":"3","C:\\ProjetoTCC\\Prontuário\\web\\src\\components\\cardUser\\index.jsx":"4","C:\\ProjetoTCC\\Prontuário\\web\\src\\components\\Menu\\index.jsx":"5","C:\\ProjetoTCC\\Prontuário\\web\\src\\components\\menu\\index.jsx":"6","C:\\ProjetoTCC\\Prontuário\\web\\src\\Routes.js":"7","C:\\ProjetoTCC\\Prontuário\\web\\src\\pages\\searchProntuario\\index.jsx":"8","C:\\ProjetoTCC\\Prontuário\\web\\src\\components\\cardProntList\\index.jsx":"9","C:\\ProjetoTCC\\Prontuário\\web\\src\\pages\\Home\\index.jsx":"10","C:\\ProjetoTCC\\Prontuário\\web\\src\\pages\\editProntuario\\index.jsx":"11","C:\\ProjetoTCC\\Prontuário\\web\\src\\pages\\viewProntuario\\index.jsx":"12","C:\\ProjetoTCC\\Prontuário\\web\\src\\pages\\viewProntuario\\teste.jsx":"13","C:\\ProjetoTCC\\Prontuário\\web\\src\\components\\HeightMask\\index.jsx":"14","C:\\ProjetoTCC\\Prontuário\\web\\src\\components\\WeightMask\\index.jsx":"15"},{"size":198,"mtime":1629376038000,"results":"16","hashOfConfig":"17"},{"size":160,"mtime":1629376038000,"results":"18","hashOfConfig":"17"},{"size":121,"mtime":1629400739748,"results":"19","hashOfConfig":"17"},{"size":2475,"mtime":1629376038000,"results":"20","hashOfConfig":"17"},{"size":7754,"mtime":1626371353188,"results":"21","hashOfConfig":"17"},{"size":7555,"mtime":1628018392083,"results":"22","hashOfConfig":"17"},{"size":691,"mtime":1629376038000,"results":"23","hashOfConfig":"17"},{"size":8736,"mtime":1629376038000,"results":"24","hashOfConfig":"17"},{"size":2382,"mtime":1629404546683,"results":"25","hashOfConfig":"17"},{"size":7958,"mtime":1629395852292,"results":"26","hashOfConfig":"17"},{"size":53067,"mtime":1629424835095,"results":"27","hashOfConfig":"17"},{"size":2021,"mtime":1628805327002,"results":"28","hashOfConfig":"17"},{"size":13069,"mtime":1629376038000,"results":"29","hashOfConfig":"17"},{"size":399,"mtime":1629376038000,"results":"30","hashOfConfig":"17"},{"size":388,"mtime":1629376038000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"8xww39",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\ProjetoTCC\\Prontuário\\web\\src\\index.js",[],["68","69"],"C:\\ProjetoTCC\\Prontuário\\web\\src\\App.js",[],"C:\\ProjetoTCC\\Prontuário\\web\\src\\services\\api.js",[],"C:\\ProjetoTCC\\Prontuário\\web\\src\\components\\cardUser\\index.jsx",[],"C:\\ProjetoTCC\\Prontuário\\web\\src\\components\\Menu\\index.jsx",["70","71","72","73","74"],"C:\\ProjetoTCC\\Prontuário\\web\\src\\components\\menu\\index.jsx",["75","76","77","78"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport MoreIcon from '@material-ui/icons/More';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport logo from '../../images/logo.svg';\r\n\r\n\r\nconst drawerWidth = 310;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100vh',\r\n  },\r\n  appBar: {\r\n    background: '#FFFFFF',\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    color: 'black',\r\n  },\r\n  menuButton2: {\r\n    marginRight: theme.spacing(-2),\r\n    marginLeft: 'auto',\r\n    color: 'black',\r\n  },\r\n  hide: {\r\n    display: 'block',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 0,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -310,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  primary: {\r\n    color: '#878686',\r\n    fontFamily: 'Roboto',\r\n    fontSize: '18px',\r\n    fontweight: 'normal',\r\n    '&:hover': {\r\n      color: '#0071BC',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n}));\r\n\r\nconst outherThemefont = createMuiTheme({\r\n  typography: {\r\n    h1: {\r\n      fontFamily: 'Roboto',\r\n      fontSize: 35,\r\n      fontWeight: 400,\r\n      color: '#000000',\r\n      fontStyle: 'normal',\r\n    },\r\n  },\r\n});\r\n\r\nfunction Menu() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"initial\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              edge=\"start\"\r\n              className={clsx(classes.menuButton, open && classes.hide)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <IconButton\r\n             color=\"initial\"\r\n             aria-label=\"exit\"\r\n             edge=\"start\"\r\n            className={clsx(classes.menuButton2, open && classes.hide)}\r\n            >\r\n              <ExitToAppIcon style={{ color: 'black' }} />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"left\"\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === 'ltr' ? (\r\n                <ChevronLeftIcon />\r\n              ) : (\r\n                <ChevronRightIcon />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          <img src={logo} alt=\"Logo do Fabbrini\"></img>\r\n          <Divider />\r\n          <List style={{textAlign: 'center'}}>\r\n            {[\r\n              'DASHBOARD',\r\n              'PROFISSIONAIS',\r\n              'PACIENTES',\r\n              'AGENDA',\r\n              'PRONTUÁRIO',\r\n              'AJUDA',\r\n              'SOBRE',\r\n            ].map((text, index) => (\r\n              <ListItem button key={text} divider style={{padding: '30px'}}>\r\n                <ListItemIcon >\r\n                  {index === 0 ? (\r\n                    <DashboardIcon style={{ color: '#0071BC', }} />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                  {index === 1 ? (\r\n                    <PeopleIcon style={{ color: '#0071BC' }} />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                  {index === 2 ? (\r\n                    <LocalHospitalIcon style={{ color: '#0071BC' }} />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                  {index === 3 ? <EventIcon style={{ color: '#0071BC' }} /> : ''}\r\n                  {index === 4 ? (\r\n                    <AssignmentIndIcon style={{ color: '#0071BC' }} />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                  {index === 5 ? <HelpIcon style={{ color: '#0071BC' }} /> : ''}\r\n                  {index === 6 ? <MoreIcon style={{ color: '#0071BC' }} /> : ''}\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  classes={{ primary: classes.primary }}\r\n                  primary={text}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n        {/* <main\r\n          className={clsx(classes.content, {\r\n            [classes.contentShift]: open,\r\n          })}\r\n        >\r\n          <div className={classes.drawerHeader} />\r\n          <ThemeProvider theme={outherThemefont}>\r\n            <Box mt=\"30px\">\r\n              <Box ml=\"40px\">\r\n                <Box mb=\"40px\">\r\n                  <Typography variant=\"h1\">PRONTUÁRIO</Typography>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </ThemeProvider>\r\n            \r\n       </main> */}\r\n      </div>\r\n\r\n  );\r\n}\r\nexport default Menu;\r\n",["79","80"],"C:\\ProjetoTCC\\Prontuário\\web\\src\\Routes.js",[],"C:\\ProjetoTCC\\Prontuário\\web\\src\\pages\\searchProntuario\\index.jsx",[],"C:\\ProjetoTCC\\Prontuário\\web\\src\\components\\cardProntList\\index.jsx",["81"],"import * as React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport { Link } from \"react-router-dom\";\nimport FaceIcon from '@material-ui/icons/Face';\n\nexport default function CardProntList({user}) {\n\n  const name = user.name\n  console.log(name)\n\n  \n  return (\n    <Card sx={{ maxWidth: 345 }} style={{width: '425px', height: '255px', boxShadow: 'rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px', borderRadius: '10px'}} key={user._id}>\n        <CardHeader\n          style={{backgroundColor: '#efebe9'}}\n          avatar={\n            <Avatar  style={{width: '100px', width: '75px', height: '75px'}}>\n                <FaceIcon style={{background: 'white', color: '#0071BC' , fontSize: 100}}/>\n            </Avatar>\n          }\n          title={<Typography variant=\"h6\">{user.name}</Typography>}\n        />\n      \n      <CardContent style={{height: '90px',  backgroundColor: '#F5F5F5',boxShadow: 'rgba(0, 0, 1, 1) 0px 5px 10px'}}>\n        <Typography variant=\"body1\">Email: {user.email}</Typography>\n        <Typography variant=\"body1\">CPF: {user.cpf}</Typography>\n      </CardContent>\n      <CardActions style={{display: 'flex', justifyContent: 'flex-end', alignItems: 'center', backgroundColor: '#0071BC', boxShadow: 'rgba(0, 0, 1, 1) 0px 5px 15px'}}>\n        <Link to={`/editar/prontuario/${user._id}`}>\n          <Tooltip title=\"Editar Prontuário\" aria-label=\"add\">\n            <IconButton aria-label=\"Edit\" style={{}}>\n              <EditIcon style={{color: '#EFEFEF'}}/>\n            </IconButton>\n          </Tooltip>\n        </Link>\n        <a href={`/visualizar/prontuario/${user._id}`}  >\n          <Tooltip title=\"Visualizar Prontuário\" aria-label=\"add\">\n            <IconButton aria-label=\"Print\" >\n              <AssignmentIcon style={{color: '#EFEFEF'}}/>\n            </IconButton>\n          </Tooltip>\n        </a>\n      </CardActions>\n    </Card>\n  );\n}\n","C:\\ProjetoTCC\\Prontuário\\web\\src\\pages\\Home\\index.jsx",["82"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport EventIcon from '@material-ui/icons/Event';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport HelpIcon from '@material-ui/icons/Help';\nimport MoreIcon from '@material-ui/icons/More';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport logo from '../../images/logo.svg';\nimport { Link} from \"react-router-dom\";\nimport '../../styles/Global.css'\nimport dashboard from '../../images/dashboard.svg';\n// import dashboard1 from '../../images/dashboard1.svg';\n\n\n//Grid\n\nconst themeGlobal = createTheme({\n  palette: {\n    primary: {\n      main: '#2D9CDB',\n    },\n  },\n});\n\nconst drawerWidth = 350;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    width: '100%',\n    background: '#F0F0F0',\n    height: '100vh',\n  },\n  appBar: {\n    background: '#FFFFFF',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    color: 'black',\n  },\n  menuButton2: {\n    marginRight: theme.spacing(-2),\n    marginLeft: 'auto',\n    color: 'black',\n  },\n  hide: {\n    display: 'block',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 0,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -310,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  primary: {\n    color: '#878686',\n    fontFamily: 'Roboto',\n    fontSize: '18px',\n    fontweight: 'normal',\n    '&:hover': {\n      color: '#0071BC',\n      fontWeight: 'bold',\n    },\n  },\n}));\n\n\nfunction Home() {\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <ThemeProvider theme={themeGlobal}>\n      <div className={classes.root}>\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"initial\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <IconButton\n              edge=\"start\"\n              className={clsx(classes.menuButton2, open && classes.hide)}\n            >\n              <ExitToAppIcon style={{ color: 'black' }} />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'ltr' ? (\n                <ChevronLeftIcon />\n              ) : (\n                <ChevronRightIcon />\n              )}\n            </IconButton>\n          </div>\n          <img src={logo} alt=\"Logo do Fabbrini\" style={{ height: '150px', margin: '0 auto', marginBottom: '20px'}}></img>\n          <Divider />\n          <List style={{textAlign: 'center'}}>\n              <ListItem button style={{padding: '30px'}}>\n                <ListItemIcon>\n                  <AssignmentIndIcon style={{ color: '#0071BC'}}/>\n                </ListItemIcon>\n                <ListItemText primary=\"DASHBOARD\" classes={{ primary: classes.primary }} />\n              </ListItem>\n          <Divider />\n            <Link to=\"/prontuarios\" style={{textDecoration: 'none'}}>\n              <ListItem button style={{padding: '30px'}}>\n                <ListItemIcon>\n                  <AssignmentIndIcon style={{ color: '#0071BC'}}/>\n                </ListItemIcon>\n                <ListItemText primary=\"PRONTUÁRIOS\" classes={{ primary: classes.primary }} />\n              </ListItem>\n            </Link>\n          <Divider /> \n            {[\n              'PROFISSIONAIS',\n              'PACIENTES',\n              'AGENDA',\n              'AJUDA',\n              'SOBRE',\n            ].map((text, index) => (\n              <ListItem button key={text} divider style={{padding: '30px'}}>\n                <ListItemIcon >\n                  {index === 0 ? (\n                    <DashboardIcon style={{ color: '#0071BC', }} />\n                  ) : (\n                    ''\n                  )}\n                  {index === 1 ? (\n                    <PeopleIcon style={{ color: '#0071BC' }} />\n                  ) : (\n                    ''\n                  )}\n                  {index === 2 ? (\n                    <LocalHospitalIcon style={{ color: '#0071BC' }} />\n                  ) : (\n                    ''\n                  )}\n                  {index === 3 ? <EventIcon style={{ color: '#0071BC' }} /> : ''}\n                  {index === 4 ? <HelpIcon style={{ color: '#0071BC' }} /> : ''}\n                  {index === 5 ? <MoreIcon style={{ color: '#0071BC' }} /> : ''}\n                </ListItemIcon>\n                <ListItemText\n                  classes={{ primary: classes.primary }}\n                  primary={text}\n                />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n        <main\n            main\n            className={clsx(classes.content, {\n            [classes.contentShift]: open,\n            })}\n        >\n            \n          <div className={classes.drawerHeader} />\n          <div style={{width: '1520px', height: '600px', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', gap: '20px'}}>\n            <img src={dashboard}style={{width: '600px', marginTop: '125px'}}/>\n            <h1 style={{fontSize: '50px', color: '#333333'}}>Seja bem vindo(a) ao Fabbrini</h1>\n         </div>  \n        </main>\n      </div>\n    </ThemeProvider>\n  );\n}\nexport default Home;\n","C:\\ProjetoTCC\\Prontuário\\web\\src\\pages\\editProntuario\\index.jsx",["83","84","85"],"import React from 'react';\nimport { useEffect, useState  } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport EventIcon from '@material-ui/icons/Event';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport HelpIcon from '@material-ui/icons/Help';\nimport MoreIcon from '@material-ui/icons/More';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport logo from '../../images/logo.svg';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport HeightIcon from '@material-ui/icons/Height';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport api from '../../services/api';\nimport MediaControlCard from '../../components/cardUser/index'\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionActions from \"@material-ui/core/AccordionActions\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport TextField from '@material-ui/core/TextField';\nimport ptLocale from 'date-fns/locale/pt';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n\n} from '@material-ui/pickers';\n\nimport { DatePicker } from \"@material-ui/pickers\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport HeightFormat from '../../components/HeightMask';\nimport WeightFormat from '../../components/WeightMask';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useHistory, Link, useParams } from \"react-router-dom\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport axios from 'axios';\nimport fileDownload from \"js-file-download\";\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport Badge from '@material-ui/core/Badge';\n\nconst themeGlobal = createTheme({\n  palette: {\n    primary: {\n      main: '#2D9CDB',\n    },\n    secondary: {\n      main: '#44b700',\n    },\n  },\n});\n\nconst useStylesAcordion = makeStyles((theme) => ({\n  root: {\n    margin: '35px',\n    padding: '25px',\n    background: '#F0F0F0',\n    borderRadius: '15px',\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',   \n    border: '1px solid #E0E0E0',\n    overflowY: 'auto',\n    height: '710px',\n    '&::-webkit-scrollbar': {\n      width: '9px',\n\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: '#2D9CDB',\n      borderRadius: '15px'\n    }\n  },\n  heading: {\n    fontFamily: 'Roboto',\n    fontSize: '18px',\n    fontWeight: 500,\n    fontStyle: 'normal',\n    color: '#878686',\n  },\n}));\nconst Container = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center', \n    justifyContent: 'center'\n  },\n  button: {\n    marginRight: theme.spacing(18),\n    width: '50px',\n    marginLeft: 'auto',\n    marginBottom: '20px',\n    marginTop: '12px',\n  },\n}));\n\nconst InputDiv1 = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(3, 12, 3, 16),\n      width: ' 50ch',\n    },\n  },\n  accordion: {\n    background: '#E5E5E5',\n  }\n}));\n\nconst ImputFont = createTheme({\n  typography: {\n    subtitle1: {\n      fontSize: 18,\n      fontStyle: 'normal',\n      color: '#878686',\n    },\n    h1: {\n      fontFamily: 'Roboto',\n      fontSize: 45,\n      fontWeight: 400,\n      color: '#000000',\n      fontStyle: 'normal',\n    },\n  },\n});\n\nconst drawerWidth = 350;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    height: '100vh',\n    width: '100vw',\n    background: '#F0F0F0',\n  },\n  appBar: {\n    background: '#FFFFFF',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    color: 'black',\n  },\n  menuButton2: {\n    marginRight: theme.spacing(-2),\n    marginLeft: 'auto',\n    color: 'black',\n  },\n  hide: {\n    display: 'block',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 0,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -310,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  primary: {\n    color: '#878686',\n    fontFamily: 'Roboto',\n    fontSize: '18px',\n    fontweight: 'normal',\n    '&:hover': {\n      color: '#0071BC',\n      fontWeight: 'bold',\n    },\n  },\n}));\n\nconst outherThemefont = createTheme({\n  typography: {\n    h1: {\n      fontFamily: 'Roboto',\n      fontSize: 35,\n      fontWeight: 400,\n      color: '#000000',\n      fontStyle: 'normal',\n    },\n  },\n});\n\n\nfunction EditProntuario() {\n  const classes = useStyles();\n  const classesBases1 = useStylesAcordion();\n  const classesDiv1 = InputDiv1();\n  const classesContainer = Container();\n\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const [ generalDateTime,           setGeneralDateTime]               = React.useState(new Date(\"2014-08-18T21:11:54\"));\n  const [ generalGroup,              setGeneralGroup]                  = React.useState('');\n  const [ generalValue,              setGeneralValue]                  = React.useState('');\n  // const [ generalFiles,              setGeneralFiles]                  = React.useState([]);\n\n  \n  const [ anthropDateTime,           setAnthropDateTime]               = React.useState(new Date());\n  const [ anthropBirthDate,          setAnthropBirthDate]              = React.useState(new Date());\n  const [ anthropSex,                setAnthropSex]                    = React.useState('');\n  const [ anthropHeigth,             setAnthropHeigth]                 = React.useState('');\n  const [ anthropWeigth,             setAnthropWeigth]                 = React.useState('');\n  const [ anthropMemo,               setAnthropMemo]                   = React.useState('');\n  // const [ anthropFiles,              setAnthropFiles]                  = React.useState('');\n\n  const [ consultDateTime,           setConsultDateTime]               = React.useState(new Date());\n  const [ consultType,               setConsultType]                   = React.useState('');\n  const [ consultProfessionalId,     setConsultProfessionalId]         = React.useState('');\n  const [ consultSpeciality,         setConsultSpeciality]             = React.useState('');\n  const [ consultLocal,              setConsultLocal]                  = React.useState('');\n  const [ consultReason,             setConsultReason]                 = React.useState('');\n  const [ consultHistory,            setConsultHistory]                = React.useState('');\n  const [ consultExamination,        setConsultExamination]            = React.useState('');\n  const [ consultHypothesis,         setConsultHypothesis]             = React.useState('');\n  const [ consultRecomendations,     setConsultRecomendations]         = React.useState('');\n  const [ consultPrescription,       setConsultPrescription]           = React.useState('');\n  const [ consultExamsRequest,       setConsultExamsRequest]           = React.useState('');\n  const [ consultMedicalCertificate, setConsultMedicalCertificate]     = React.useState('');\n  // const [ consultFiles,              setConsultFiles]                  = React.useState('');\n\n  const [ examsType,                 setExamsType]                     = React.useState('');\n  const [ examsLab,                  setExamsLab]                      = React.useState('');\n  const [ examsMethod,               setExamsMethod]                   = React.useState('');\n  const [ examsValue,                setExamsValue]                    = React.useState('');\n  const [ examsUnit,                 setExamsUnit]                     = React.useState('');\n  const [ examsReference,            setExamsReference]                = React.useState('');\n  const [ examsReport,               setExamsReport]                   = React.useState('');\n  // const [ examsFiles,                setExamsFiles]                    = React.useState('');\n\n\n  function downloadFile(url, filename){\n    axios\n      .get(url, {\n        responseType: \"blob\"\n      })\n      .then((res) => {\n        fileDownload(res.data, filename);\n      });\n  };\n\n  const [generalImageURL, setGeneralImageURL] = React.useState('');\n  const [generalOriginalFileName, setGeneralOriginalFileName] = React.useState([]);\n  const [generalFormatFile, setGeneralFormatFile] = React.useState([]);\n  const [contGeneral, setContGeneral] = React.useState(0);\n  async function handleChangeGeneralFiles(e) {\n    const files = e.target.files[0]\n    const formData = new FormData()\n    formData.append('file', files);\n    formData.append('upload_preset', 't34xjsxz')\n    const res = await fetch(process.env.REACT_APP_API_CLOUDNARY_URL,  \n    {\n      method: 'POST',\n      body: formData,\n    })\n\n    const fileResponse = await res.json()\n    console.log(fileResponse)\n    setGeneralImageURL(fileResponse.secure_url)\n    setGeneralOriginalFileName(fileResponse.original_filename)\n    setGeneralFormatFile(fileResponse.format)\n    setContGeneral(contGeneral + 1)\n  }\n\n  const [anthropImageURL, setAnthropImageURL] = React.useState('');\n  const [anthropOriginalFileName, setAnthropOriginalFileName] = React.useState([]);\n  const [anthropFormatFile, setAnthropFormatFile] = React.useState([]);\n  const [contAnthrop, setContAnthrop] = React.useState(0);\n  async function handleChangeAnthropFiles(e) {\n    const files = e.target.files[0]\n    const formData = new FormData()\n    formData.append('file', files);\n    formData.append('upload_preset', 't34xjsxz')\n    const res = await fetch(process.env.REACT_APP_API_CLOUDNARY_URL, \n    {\n      method: 'POST',\n      body: formData,\n    })\n\n    const fileResponse = await res.json()\n    console.log(fileResponse)\n    setAnthropImageURL(fileResponse.secure_url)\n    setAnthropOriginalFileName(fileResponse.original_filename)\n    setAnthropFormatFile(fileResponse.format)\n    setContAnthrop(contAnthrop + 1)\n  }\n\n  const [consultImageURL, setConsultImageURL] = React.useState('');\n  const [consultOriginalFileName, setConsultOriginalFileName] = React.useState([]);\n  const [consultFormatFile, setConsultFormatFile] = React.useState([]);\n  const [contConsult, setContConsult] = React.useState(0);\n  async function handleChangeConsultFiles(e) {\n    const files = e.target.files[0]\n    const formData = new FormData()\n    formData.append('file', files);\n    formData.append('upload_preset', 't34xjsxz')\n    const res = await fetch(process.env.REACT_APP_API_CLOUDNARY_URL, \n    {\n      method: 'POST',\n      body: formData,\n    })\n\n    const fileResponse = await res.json()\n    console.log(fileResponse)\n    setConsultImageURL(fileResponse.secure_url)\n    setConsultOriginalFileName(fileResponse.original_filename)\n    setConsultFormatFile(fileResponse.format)\n    setContConsult(contConsult + 1)\n  }\n\n  const [examsImageURL, setExamsImageURL] = React.useState('');\n  const [examsOriginalFileName, setExamsOriginalFileName] = React.useState([]);\n  const [examsFormatFile, setExamsFormatFile] = React.useState([]);\n  const [contExams, setContExams] = React.useState(0);\n  async function handleChangeExamsFiles(e) {\n    const files = e.target.files[0]\n    const formData = new FormData()\n    formData.append('file', files);\n    formData.append('upload_preset', 't34xjsxz')\n    const res = await fetch(process.env.REACT_APP_API_CLOUDNARY_URL, \n    {\n      method: 'POST',\n      body: formData,\n    })\n\n    const fileResponse = await res.json()\n    console.log(fileResponse)\n    setExamsImageURL(fileResponse.secure_url)\n    setExamsOriginalFileName(fileResponse.original_filename)\n    setExamsFormatFile(fileResponse.format)\n    setContExams(contExams + 1)\n  }\n\n\n  const [ data,  setData] = React.useState([]);\n  const [loading, setLoading] = React.useState(true)\n  const [ loadSave, setLoadSave] = React.useState(false)\n  const [disable, setDisable] = React.useState(false);\n  const history = useHistory();\n\n  const { id } = useParams();\n  useEffect(() => {\n    async function getProntuario(){\n\n      const response = await api.get(`/editar/prontuario/${id}`)\n      setData(response.data) \n      setLoading(false)\n      console.log(response)\n\n      \n      setGeneralDateTime(response.data.generalDateTime);\n      setGeneralGroup(response.data.generalGroup)                  \n      setGeneralValue(response.data.generalValue)                  \n\n      setAnthropDateTime(response.data.anthropDateTime)               \n      setAnthropBirthDate(response.data.anthropBirthDate)              \n      setAnthropSex(response.data.anthropSex)                    \n      setAnthropHeigth(response.data.anthropHeigth)                 \n      setAnthropWeigth(response.data.anthropWeigth)                 \n      setAnthropMemo(response.data.anthropMemo)                   \n\n      setConsultDateTime(response.data.consultDateTime)               \n      setConsultType(response.data.consultType)                   \n      setConsultProfessionalId(response.data.consultProfessionalId)         \n      setConsultSpeciality(response.data.consultSpeciality)             \n      setConsultLocal(response.data.consultLocal)                 \n      setConsultReason(response.data.consultReason)                 \n      setConsultHistory(response.data.consultHistory)                \n      setConsultExamination(response.data.consultExamination)            \n      setConsultHypothesis(response.data.consultHypothesis)             \n      setConsultRecomendations(response.data.consultRecomendations)         \n      setConsultPrescription(response.data.consultPrescription)           \n      setConsultExamsRequest(response.data.consultExamsRequest)           \n      setConsultMedicalCertificate(response.data.consultMedicalCertificate)     \n\n      setExamsType(response.data.examsType)                     \n      setExamsLab(response.data.examsLab)                      \n      setExamsMethod(response.data.examsMethod)                   \n      setExamsValue(response.data.examsValue)                    \n      setExamsUnit(response.data.examsUnit)                     \n      setExamsReference(response.data.examsReference)                \n      setExamsReport(response.data.examsReport)\n    }\n    setTimeout(() => getProntuario(), 1000);\n\n  },[id]);\n\n  async function handleSubmit(event){\n    event.preventDefault();\n\n    const data = {\n\n      generalDateTime, \n      generalGroup, \n      generalValue,\n      generalImageURL,\n\n      anthropDateTime,          \n      anthropBirthDate,        \n      anthropSex,                \n      anthropHeigth,\n      anthropWeigth,             \n      anthropMemo,\n      anthropImageURL,\n\n      consultDateTime,                       \n      consultType,               \n      consultProfessionalId,     \n      consultSpeciality,         \n      consultLocal,              \n      consultReason,             \n      consultHistory,            \n      consultExamination,        \n      consultHypothesis,         \n      consultRecomendations,     \n      consultPrescription,       \n      consultExamsRequest,       \n      consultMedicalCertificate,\n      consultImageURL,\n\n      examsType,     \n      examsLab,      \n      examsMethod,   \n      examsValue,    \n      examsUnit,     \n      examsReference,\n      examsReport,\n      examsImageURL \n\n    }\n    try {\n      const response = await api.put(`/editar/prontuario/${id}`, data)\n      console.log(response)\n      setLoadSave(true)\n      setDisable(true)\n      const toastId = toast.loading('Salvando...');\n      if (response) {\n        setTimeout(() =>{\n          setLoadSave(false)\n          toast.dismiss(toastId);\n          toast.success(`${response.data}`)\n          setDisable(false)\n          setTimeout(() => {\n            // history.push(\"/prontuarios\")\n          }, 1500)\n\n        }, 2500)\n       \n      }\n      \n    }\n    catch(err) {\n      toast.error(\"Erro ao salvar\")\n    }\n  }\n\n  \n   \n  return (\n    <ThemeProvider theme={themeGlobal}>\n      <div className={classes.root}>\n      <Toaster   position=\"bottom-center\" toastOptions={{\n        success: {\n          iconTheme: {\n            primary: '#2D9CDB',\n            secondary: 'white',\n          },\n        },\n        className: '',\n        style: {\n        fontSize: '22px',\n        padding: '36px',\n        color: '#713200',\n        width: '100%',\n        height: '60px',\n        marginBottom: '80px',\n        },\n        }}\n       />\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"initial\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <IconButton\n              edge=\"start\"\n              className={clsx(classes.menuButton2, open && classes.hide)}\n            >\n              <ExitToAppIcon style={{ color: 'black' }} />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'ltr' ? (\n                <ChevronLeftIcon />\n              ) : (\n                <ChevronRightIcon />\n              )}\n            </IconButton>\n          </div>\n          <img src={logo} alt=\"Logo do Fabbrini\" style={{ height: '150px', margin: '0 auto', marginBottom: '20px'}}></img>\n          <Divider />\n          <List style={{textAlign: 'center'}}>\n            <Link to=\"/\" style={{textDecoration: 'none'}}>\n              <ListItem button style={{padding: '30px'}}>\n                <ListItemIcon>\n                  <AssignmentIndIcon style={{ color: '#0071BC'}}/>\n                </ListItemIcon>\n                <ListItemText primary=\"DASHBOARD\" classes={{ primary: classes.primary }} />\n              </ListItem>\n            </Link>\n          <Divider /> \n            <Link to=\"/prontuarios\" style={{textDecoration: 'none'}}>\n              <ListItem button style={{padding: '30px'}}>\n                <ListItemIcon>\n                  <AssignmentIndIcon style={{ color: '#0071BC'}}/>\n                </ListItemIcon>\n                <ListItemText primary=\"PRONTUÁRIOS\" classes={{ primary: classes.primary }} />\n              </ListItem>\n            </Link>\n          <Divider /> \n            {[\n              'PROFISSIONAIS',\n              'PACIENTES',\n              'AGENDA',\n              'AJUDA',\n              'SOBRE',\n            ].map((text, index) => (\n              <ListItem button key={text} divider style={{padding: '30px'}}>\n                <ListItemIcon >\n                  {index === 0 ? (\n                    <DashboardIcon style={{ color: '#0071BC', }} />\n                  ) : (\n                    ''\n                  )}\n                  {index === 1 ? (\n                    <PeopleIcon style={{ color: '#0071BC' }} />\n                  ) : (\n                    ''\n                  )}\n                  {index === 2 ? (\n                    <LocalHospitalIcon style={{ color: '#0071BC' }} />\n                  ) : (\n                    ''\n                  )}\n                  {index === 3 ? <EventIcon style={{ color: '#0071BC' }} /> : ''}\n                  {index === 4 ? <HelpIcon style={{ color: '#0071BC' }} /> : ''}\n                  {index === 5 ? <MoreIcon style={{ color: '#0071BC' }} /> : ''}\n                </ListItemIcon>\n                <ListItemText\n                  classes={{ primary: classes.primary }}\n                  primary={text}\n                />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n          <ThemeProvider theme={outherThemefont}>\n            <Box mt=\"30px\">\n              <Box ml=\"40px\">\n                <Box mb=\"40px\">\n                  <Typography variant=\"h1\">PRONTUÁRIO ELETRÔNICO</Typography>\n                </Box>\n              </Box>\n            </Box>\n          </ThemeProvider>\n          \n          {/*ACCORDIONS*/}\n          <div className={classesBases1.root}>\n              <div style={{display: 'flex', justifyContent: 'flex-start', width: '472px', marginBottom: '35px'}}>\n                {loading ? (<LinearProgress style={{width: '100%'}} />) : (<MediaControlCard data={data}/>)}\n              </div>\n          \n           {/* Primeiro Accordion */}\n            <form  onSubmit={handleSubmit}>\n            <Box mb=\"35px\">\n          \n                <Accordion\n                  style={{ borderRadius: '12px', boxsizing: 'border-box', border: '1px solid #E0E0E0'}}\n                >\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-conten\"\n                    id=\"panel1a-header\"\n                  >\n                    <Typography className={classesBases1.heading}>\n                      Entrada de Saúde\n                    </Typography>\n                  </AccordionSummary>\n                  <Divider />\n                  <ThemeProvider theme={ImputFont}>\n                    <Box ml=\"115px\">\n                      <Box mt=\"20px\">\n                        <Typography variant=\"subtitle1\">\n                          Insira as informações referente a queixa principal.\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </ThemeProvider>\n\n                  {/* GENERAL ACCORDION */}\n                  <section className={classesContainer.root}>\n                    <div className={classesDiv1.root}>\n                      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ptLocale}>\n                            <KeyboardDatePicker\n                              label=\"Data de hoje\"\n                              inputVariant=\"outlined\"\n                              margin=\"normal\"\n                              id=\"generalDateTime\"\n                              name=\"generalDateTime\"\n                              value={generalDateTime}\n                              onChange={date => setGeneralDateTime(date)}\n                              format=\"dd/MM/yyyy\"\n                              KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                              }}\n                            />\n                          </MuiPickersUtilsProvider>\n\n                        <FormControl\n                          variant=\"outlined\"\n                          className={classes.formControl}\n                        >\n                          <InputLabel id=\"demo-simple-select-outlined-label\">\n                            Sexo\n                          </InputLabel>\n                          <Select\n                            labelId=\"demo-simple-select-outlined-label\"\n                            id=\"generalGroup\"\n                            name=\"generalGroup\"\n                            value={generalGroup}\n                            onChange={e => setGeneralGroup(e.target.value)}\n                            label=\"Sexo\"\n                          >\n                            <MenuItem>\n                              <em>-</em>\n                            </MenuItem>\n                            <MenuItem value={'Masculino'}>Masculino</MenuItem>\n                            <MenuItem value={'Feminino'}>Feminino</MenuItem>\n                          </Select>\n                        </FormControl>\n\n                        <TextField\n                          label=\"Observações\"\n                          variant=\"outlined\"\n                          id=\"generalValue\"\n                          name=\"generalValue\"\n                          value={generalValue}\n                          onChange={e => setGeneralValue(e.target.value)}\n                          type=\"text\"\n                          placeholder=\"Insira alguma observação aqui\"\n                          multiline\n                          rows={3}                       \n                        />\n                        \n                        <TextField\n                          id=\"generalFiles\"\n                          name=\"generalFiles\"\n                          type=\"file\"\n                          accept=\"image/png,image/jpeg\"\n                          onChange={handleChangeGeneralFiles}\n                          InputProps={{\n                            startAdornment: (\n                              <IconButton position=\"start\" style={{marginRight: '15px'}} type=\"button\" onClick={() => {downloadFile(generalImageURL,`${generalOriginalFileName}.${generalFormatFile}`)}}>\n                                <Badge badgeContent={contGeneral} color=\"secondary\" variant=\"standard\">\n                                  <CloudDownloadIcon color=\"primary\" />\n                                </Badge>\n                              </IconButton>\n                              ),\n                            }}\n                          />\n                         \n                    </div>                 \n                  </section>\n                </Accordion>\n            </Box>\n            \n            {/* Segundo Accordion */}\n              <Box mb=\"35px\">\n\n                  <Accordion\n                    style={{ borderRadius: '12px', boxsizing: 'border-box',background: '#FFFFFF', border: '1px solid #E0E0E0'}}\n                  >\n                    <AccordionSummary\n                      expandIcon={<ExpandMoreIcon />}\n                      aria-controls=\"panel2a-content\"\n                      id=\"panel2a-header\"\n                    >\n                      <Typography className={classesBases1.heading}>\n                        Antropometria\n                      </Typography>\n                    </AccordionSummary>\n                    <Divider />\n                    <ThemeProvider theme={ImputFont}>\n                      <Box ml=\"115px\">\n                        <Box mt=\"20px\">\n                          <Typography variant=\"subtitle1\">\n                            Insira as informações referente a antropometria.\n                          </Typography>\n                        </Box>\n                      </Box>\n                    </ThemeProvider>\n\n                    {/* ANTHROPOMETRY ACCORDION */}\n                    <section className={classesContainer.root}>\n                        <div className={classesDiv1.root}>\n                          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <KeyboardDatePicker\n                              label=\"Data de hoje\"\n                              inputVariant=\"outlined\"\n                              margin=\"normal\"\n                              id=\"anthropDateTime\"\n                              name=\"anthropDateTime\"\n                              value={anthropDateTime}\n                              onChange={date => setAnthropDateTime(date)}\n                              format=\"dd/MM/yyyy\"\n                              KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                              }}\n                            />\n                          </MuiPickersUtilsProvider>\n\n                          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <KeyboardDatePicker\n                              label=\"Data de aniversário\"\n                              inputVariant=\"outlined\"\n                              margin=\"normal\"\n                              id=\"anthropBirthDate\"\n                              name=\"anthropBirthDate\"\n                              value={anthropBirthDate}\n                              onChange={date => setAnthropBirthDate(date)}\n                              helperText=\"*Insira a data de seu nascimento*\"\n                              format=\"dd/MM/yyyy\"\n                              KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                              }}\n                            />\n                          </MuiPickersUtilsProvider>\n\n                          <TextField\n                            label=\"Sexo de nascimento\"\n                            id=\"anthropSex\"\n                            name=\"anthropSex\"\n                            value={anthropSex}\n                            onChange={e => setAnthropSex(e.target.value)}\n                            type=\"text\"\n                            variant=\"outlined\"\n                         />\n                                 \n                          <TextField\n                            label=\"Altura\"\n                            id=\"anthropHeigth\"\n                            name=\"anthropHeigth\"\n                            value={anthropHeigth}\n                            onChange={e => setAnthropHeigth(e.target.value)}\n                            variant=\"outlined\"\n                            InputProps={{\n                              startAdornment: (\n                                <InputAdornment position=\"start\">\n                                  <HeightIcon />\n                                </InputAdornment>\n                              ),\n                              inputComponent: HeightFormat,\n                            }}\n                          />\n\n                          <TextField\n                            label=\"Peso\"\n                            id=\"anthropWeigth\"\n                            name=\"anthropWeigth\"\n                            value={anthropWeigth}\n                            onChange={e => setAnthropWeigth(e.target.value)}\n                            variant=\"outlined\"\n                            InputProps={{\n                              startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n                              inputComponent: WeightFormat\n                            }}\n                          />\n\n                          <TextField\n                            label=\"Circunferência abdominal\"\n                            id=\"anthropMemo\"\n                            name=\"anthropMemo\"\n                            value={anthropMemo}\n                            onChange={e => setAnthropMemo(e.target.value)}\n                            variant=\"outlined\"\n                            type=\"text\"\n                            multiline\n                            rows={3} \n                          />\n\n                          <TextField\n                            helperText=\"*Faça o upload de alguma imagem*\"\n                            variant=\"outlined\"\n                            id=\"anthropFiles\"\n                            name=\"anthropFiles\"\n                            type=\"file\"\n                            accept=\"image/png,image/jpeg\"\n                            onChange={handleChangeAnthropFiles}\n                            InputProps={{\n                              startAdornment: (\n                                  <IconButton position=\"start\" style={{marginRight: '25px'}} type=\"button\" onClick={() => {downloadFile(anthropImageURL,`${anthropOriginalFileName}.${anthropFormatFile}`)}}>\n                                    <Badge badgeContent={contAnthrop} color=\"secondary\" variant=\"standard\">\n                                      <CloudDownloadIcon color=\"primary\" />\n                                    </Badge>\n                                  </IconButton>\n                              ),\n                            }}\n                          />\n                        </div>\n                    </section>\n                  </Accordion>\n              </Box>\n            \n            {/* Terceiro Accordion */}\n            <Box mb=\"35px\">\n              \n                <Accordion\n                  style={{ borderRadius: '12px', boxsizing: 'border-box', background: '#FFFFFF',  border: '1px solid #E0E0E0'}}\n                >\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel3a-conten\"\n                    id=\"panel3a-header\"\n                  >\n                    <Typography className={classesBases1.heading}>\n                      Consulta\n                    </Typography>\n                  </AccordionSummary>\n                  <Divider />\n                  <ThemeProvider theme={ImputFont}>\n                    <Box ml=\"115px\">\n                      <Box mt=\"20px\">\n                        <Typography variant=\"subtitle1\">\n                          Insira as informações referente a consulta.\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </ThemeProvider>\n                  \n                  {/* CONSULT ACCORDION */}\n                  <section className={classesContainer.root}>\n                      <div className={classesDiv1.root}>\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                          label=\"Data da Consulta\"\n                          id=\"consultDateTime\"\n                          name=\"consultDateTime\"\n                          value={consultDateTime}\n                          onChange={date => setConsultDateTime(date)}\n                          disableFuture\n                          inputVariant=\"outlined\"\n                          openTo=\"year\"\n                          format=\"dd/MM/yyyy\"\n                          views={[\"date\", \"month\", \"year\"]}\n                        />\n                      </MuiPickersUtilsProvider>\n                        <FormControl\n                          variant=\"outlined\"\n                          className={classes.formControl}\n                        >\n                          <InputLabel id=\"demo-simple-select-outlined-label2\">\n                            Tipo da consulta\n                          </InputLabel>\n                          <Select\n                            labelId=\"demo-simple-select-outlined-label2\"\n                            label=\"Tipo da consulta\"\n                            id=\"consultType\"\n                            name=\"consultType\"\n                            value={consultType}\n                            onChange={e => setConsultType(e.target.value)}\n                          >\n                            <MenuItem>\n                              <em>-</em>\n                            </MenuItem>\n                            <MenuItem value={'Primeira Consulta'}> Primeira Consulta</MenuItem>\n                            <MenuItem value={'Retorno'}>Retorno</MenuItem>\n                            <MenuItem value={'Pré-natal'}>Pré-natal</MenuItem>\n                            <MenuItem value={'Por encaminhamento'}>Por encaminhamento</MenuItem>\n                          </Select>\n                        </FormControl>\n\n                        <TextField\n                          label=\"CRM do médico\"\n                          variant=\"outlined\"\n                          id=\"consultProfessionalId\"\n                          name=\"consultProfessionalId\"\n                          value={consultProfessionalId}\n                          onChange={e => setConsultProfessionalId(e.target.value)}\n                          type=\"number\"\n                          placeholder=\"Insira o CRM do médico\"\n                        />\n\n                        <FormControl\n                          variant=\"outlined\"\n                          className={classes.formControl}\n                        >\n                          <InputLabel id=\"demo-simple-select-outlined-label3\">\n                            Especialidade Médica\n                          </InputLabel>\n                          <Select\n                            labelId=\"demo-simple-select-outlined-label3\"\n                            label=\"Especialidade médica\"\n                            id=\"consultSpeciality\"\n                            name=\"consultSpeciality\"\n                            value={consultSpeciality}\n                            onChange={e => setConsultSpeciality(e.target.value)}\n                          >\n                            <MenuItem>\n                              <em>-</em>\n                            </MenuItem>\n                            <MenuItem value={'Cardiologia'}>Cardiologia</MenuItem>\n                            <MenuItem value={'Dermatologia'}>Dermatologia</MenuItem>\n                            <MenuItem value={'Ginecologia e Obstetrícia'}>Ginecologia e Obstetrícia</MenuItem>\n                            <MenuItem value={'Ortopedia'}>Ortopedia</MenuItem>\n                          </Select>\n                        </FormControl>\n\n                        <TextField\n                          label=\"Local da consulta\"\n                          variant=\"outlined\"\n                          id=\"consultLocal\"\n                          name=\"consultLocal\"\n                          value={consultLocal}\n                          onChange={e => setConsultLocal(e.target.value)}\n                          type=\"text\"\n                          placeholder=\"Insira o local da consulta\"\n                        />\n\n                        <TextField\n                          label=\"Motivo da consulta\"\n                          variant=\"outlined\"\n                          id=\"consultReason\"\n                          name=\"consultReason\"\n                          value={consultReason}\n                          onChange={e => setConsultReason(e.target.value)}\n                          type=\"text\"\n                          multiline\n                          rows={2}\n                          placeholder=\"Descreva o motivo da consulta\"\n                        \n                        />\n\n                        <TextField\n                          label=\"Histórico da consulta\"\n                          variant=\"outlined\"\n                          id=\"consultHistory\"\n                          name=\"consultHistory\"\n                          value={consultHistory}\n                          onChange={e => setConsultHistory(e.target.value)}\n                          type=\"text\"\n                          multiline\n                          rows={2}\n                          placeholder=\"Descreva o histórico da consulta\"\n                        />\n\n                        <TextField\n                          label=\"Exames da consulta\"\n                          variant=\"outlined\"\n                          id=\"consultExamination\"\n                          name=\"consultExamination\"\n                          value={consultExamination}\n                          onChange={e => setConsultExamination(e.target.value)}\n                          type=\"text\"\n                          multiline\n                          rows={2}\n                          placeholder=\"Descreva o Exames da consulta\"\n                        />\n\n                        <TextField\n                          label=\"Hipótese diagnóstica da consulta\"\n                          variant=\"outlined\"\n                          id=\"consultHypothesis\"\n                          name=\"consultHypothesis\"\n                          value={consultHypothesis}\n                          onChange={e => setConsultHypothesis(e.target.value)}\n                          type=\"text\"\n                          multiline\n                          rows={2}\n                          placeholder=\"Descreva as hipóteses diagnósticas da consulta\"\n                        />\n\n                        <TextField\n                          label=\"Recomendações da consulta\"\n                          variant=\"outlined\"\n                          id=\"consultRecomendations\"\n                          name=\"consultRecomendations\"\n                          value={consultRecomendations}\n                          onChange={e => setConsultRecomendations(e.target.value)}\n                          type=\"text\"\n                          multiline\n                          rows={2}\n                          placeholder=\"Descreva as recomendações médicas que o paciente devera seguir após a consulta\"\n                        /> \n\n                        <TextField\n                          label=\"Prescrições da consulta\"\n                          variant=\"outlined\"\n                          id=\"consultPrescription\"\n                          name=\"consultPrescription\"\n                          value={consultPrescription}\n                          onChange={e => setConsultPrescription(e.target.value)}\n                          type=\"text\"\n                          multiline\n                          rows={2}\n                          placeholder=\"Descreva as prescrições médicas do paciente\"                       \n                        />\n\n                        <TextField\n                          label=\"Solicitação para exame\"\n                          variant=\"outlined\"\n                          id=\"consultExamsRequest\"\n                          name=\"consultExamsRequest\"\n                          value={consultExamsRequest}\n                          onChange={e => setConsultExamsRequest(e.target.value)}\n                          type=\"text\"\n                          multiline\n                          rows={2}\n                          placeholder=\"Justifique a soliticação\"\n                        /> \n\n                        <TextField\n                          label=\"Certificado médico\"\n                          variant=\"outlined\"\n                          id=\"consultMedicalCertificate\"\n                          name=\"consultMedicalCertificate\"\n                          value={consultMedicalCertificate}\n                          onChange={e => setConsultMedicalCertificate(e.target.value)}\n                          type=\"text\"\n                          multiline\n                          rows={2}\n                          placeholder=\"Informe o certificado médico\"\n                        />\n                        <TextField\n                          helperText=\"*Faça o upload de alguma imagem*\"\n                          variant=\"outlined\"\n                          id=\"consultFiles\"\n                          name=\"consultFiles\"\n                          type=\"file\"\n                          accept=\"image/png,image/jpeg\"\n                          onChange={handleChangeConsultFiles}\n                          InputProps={{\n                            startAdornment: (\n                              <IconButton position=\"start\" style={{marginRight: '25px'}} type=\"button\" onClick={() => {downloadFile(consultImageURL,`${consultOriginalFileName}.${consultFormatFile}`)}}>\n                                <Badge badgeContent={contConsult} color=\"secondary\" variant=\"standard\">\n                                  <CloudDownloadIcon color=\"primary\"/>\n                                </Badge>\n                              </IconButton>\n                            ),\n                          }}\n                        />         \n                      </div>                    \n                  </section>\n                </Accordion>\n            </Box>\n            <Box mb=\"35px\">\n\n                <Accordion\n                  style={{ borderRadius: '12px', boxsizing: 'border-box',  border: '1px solid #E0E0E0'}}\n                >\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel4a-conten\"\n                    id=\"panel4a-header\"\n                  >\n                    <Typography className={classesBases1.heading}>\n                      Exames\n                    </Typography>\n                  </AccordionSummary>\n                  <Divider />\n                  <ThemeProvider theme={ImputFont}>\n                    <Box ml=\"115px\">\n                      <Box mt=\"20px\">\n                        <Typography variant=\"subtitle1\">\n                          Insira as informações referente aos exames.\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </ThemeProvider>\n\n\n                  {/* EXAMS ACCORDION */}\n                  <section className={classesContainer.root}>\n                      <div className={classesDiv1.root}>\n\n                        <TextField\n                          label=\"Tipo de exame\"\n                          variant=\"outlined\"\n                          id=\"examsType\"\n                          name=\"examsType\"\n                          value={examsType}\n                          onChange={e => setExamsType(e.target.value)}\n                          type=\"text\"\n                          placeholder=\"Insira alguma observação aqui\"\n                          multiline\n                          rows={2}                       \n                        />\n                        <TextField\n                          label=\"Exame laboratoriais\"\n                          variant=\"outlined\"\n                          id=\"examsLab\"\n                          name=\"examsLab\"\n                          value={examsLab}\n                          onChange={e => setExamsLab(e.target.value)}\n                          type=\"text\"\n                          placeholder=\"Insira alguma observação aqui\"\n                          multiline\n                          rows={2}                       \n                        />\n                        <TextField\n                          label=\"Método do exame\"\n                          variant=\"outlined\"\n                          id=\"examsMethod\"\n                          name=\"examsMethod\"\n                          value={examsMethod}\n                          onChange={e => setExamsMethod(e.target.value)}\n                          type=\"text\"\n                          placeholder=\"Insira alguma observação aqui\"\n                          multiline\n                          rows={2}                       \n                        />\n                        <TextField\n                          label=\"Valor do exame\"\n                          variant=\"outlined\"\n                          id=\"examsValue\"\n                          name=\"examsValue\"\n                          value={examsValue}\n                          onChange={e => setExamsValue(e.target.value)}\n                          type=\"number\"\n                          placeholder=\"Insira o valor referente ao exame\"\n                        />\n                        <TextField\n                          label=\"Unidade de exame\"\n                          variant=\"outlined\"\n                          id=\"examsUnit\"\n                          name=\"examsUnit\"\n                          value={examsUnit}\n                          onChange={e => setExamsUnit(e.target.value)}\n                          type=\"text\"\n                          multiline\n                          rows={2} \n                          placeholder=\"Insira o valor referente ao exame\"\n                        />\n                        <TextField\n                          label=\"Referência para exame\"\n                          variant=\"outlined\"\n                          id=\"examsReference\"\n                          name=\"examsReference\"\n                          value={examsReference}\n                          onChange={e => setExamsReference(e.target.value)}\n                          type=\"text\"\n                          multiline\n                          rows={2} \n                          placeholder=\"Insira o valor referente ao exame\"\n                        />\n                        <TextField\n                          label=\"Relatório de exame\"\n                          variant=\"outlined\"\n                          id=\"examsReport\"\n                          name=\"examsReport\"\n                          value={examsReport}\n                          onChange={e => setExamsReport(e.target.value)}\n                          type=\"text\"\n                          multiline\n                          rows={3} \n                          placeholder=\"Insira o valor referente ao exame\"\n                        />\n                         <TextField\n                          helperText=\"*Faça o upload de alguma imagem*\"\n                          variant=\"outlined\"\n                          id=\"examsFiles\"\n                          name=\"examsFiles\"\n                          type=\"file\"\n                          accept=\"image/png,image/jpeg\"\n                          onChange={handleChangeExamsFiles}\n                          InputProps={{\n                            startAdornment: (\n                              <IconButton position=\"start\" style={{marginRight: '25px'}} type=\"button\" onClick={() => {downloadFile(examsImageURL,`${examsOriginalFileName}.${examsFormatFile}`)}}>\n                                <Badge badgeContent={contExams} color=\"secondary\" variant=\"standard\">\n                                  <CloudDownloadIcon color=\"primary\"/>\n                                </Badge>\n                              </IconButton>\n                            ),\n                          }}\n                        /> \n                      </div>\n                  </section>\n                </Accordion>\n            </Box>\n                <AccordionActions>\n                  <Button\n                    id=\"buttonGlobalForm\"\n                    size=\"large\"\n                    variant=\"contained\"\n                    // startIcon={<SaveIcon fontSize=\"30\"/>}\n                    style={{\n                      borderRadius: '6px',\n                      fontSize: '20px',\n                    }}\n                  > \n                  VOLTAR\n                </Button>\n                <Button\n                    id=\"buttonGlobalForm\"\n                    type=\"submit\"\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    // startIcon={<SaveIcon fontSize=\"30\"/>}\n                    style={{\n                      width: \"230px\",\n                      height: \"60px\",\n                      borderRadius: '6px',\n                      fontSize: '20px',\n                      \n\n                    }}\n                    disabled={disable}                    \n                  > \n                    {loadSave ? <><CircularProgress disableShrink  style={{color: '#2D9CDB'}} />&nbsp;&nbsp;&nbsp;Salvando...</> : \"SALVAR\"}\n                </Button>\n              </AccordionActions>\n            </form>\n          </div>\n        </main>\n      </div>\n    </ThemeProvider>\n  );\n}\nexport default EditProntuario;\n","C:\\ProjetoTCC\\Prontuário\\web\\src\\pages\\viewProntuario\\index.jsx",[],"C:\\ProjetoTCC\\Prontuário\\web\\src\\pages\\viewProntuario\\teste.jsx",[],"C:\\ProjetoTCC\\Prontuário\\web\\src\\components\\HeightMask\\index.jsx",[],"C:\\ProjetoTCC\\Prontuário\\web\\src\\components\\WeightMask\\index.jsx",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":29,"column":8,"nodeType":"92","messageId":"93","endLine":29,"endColumn":14},{"ruleId":"90","severity":1,"message":"94","line":30,"column":8,"nodeType":"92","messageId":"93","endLine":30,"endColumn":16},{"ruleId":"90","severity":1,"message":"95","line":31,"column":8,"nodeType":"92","messageId":"93","endLine":31,"endColumn":25},{"ruleId":"90","severity":1,"message":"96","line":32,"column":8,"nodeType":"92","messageId":"93","endLine":32,"endColumn":18},{"ruleId":"90","severity":1,"message":"97","line":33,"column":8,"nodeType":"92","messageId":"93","endLine":33,"endColumn":22},{"ruleId":"90","severity":1,"message":"98","line":9,"column":8,"nodeType":"92","messageId":"93","endLine":9,"endColumn":18},{"ruleId":"90","severity":1,"message":"99","line":25,"column":26,"nodeType":"92","messageId":"93","endLine":25,"endColumn":39},{"ruleId":"90","severity":1,"message":"100","line":26,"column":8,"nodeType":"92","messageId":"93","endLine":26,"endColumn":11},{"ruleId":"90","severity":1,"message":"101","line":108,"column":7,"nodeType":"92","messageId":"93","endLine":108,"endColumn":22},{"ruleId":"86","replacedBy":"102"},{"ruleId":"88","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":26,"column":46,"nodeType":"106","messageId":"107","endLine":26,"endColumn":51},{"ruleId":"108","severity":1,"message":"109","line":246,"column":13,"nodeType":"110","endLine":246,"endColumn":79},{"ruleId":"90","severity":1,"message":"111","line":2,"column":21,"nodeType":"92","messageId":"93","endLine":2,"endColumn":29},{"ruleId":"90","severity":1,"message":"94","line":30,"column":8,"nodeType":"92","messageId":"93","endLine":30,"endColumn":16},{"ruleId":"90","severity":1,"message":"112","line":404,"column":9,"nodeType":"92","messageId":"93","endLine":404,"endColumn":16},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'SaveIcon' is defined but never used.","'FitnessCenterIcon' is defined but never used.","'HeightIcon' is defined but never used.","'InputAdornment' is defined but never used.","'Typography' is defined but never used.","'ThemeProvider' is defined but never used.","'Box' is defined but never used.","'outherThemefont' is assigned a value but never used.",["113"],["114"],"no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]